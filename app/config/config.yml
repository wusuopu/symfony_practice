imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        #handler_id: session.handler.pdo
        name: symfony_session
        cookie_lifetime: 3600
        gc_maxlifetime: 1800
    fragments:       ~
    http_method_override: true

services:
    pdo:
        class: PDO
        arguments:
            #dsn: "mysql:dbname=symfony2_test1"
            #user: user
            #password: user
            - "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
            - "%database_user%"
            - "%database_password%"
        calls:
          - [setAttribute, [3, 2]]    # \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION

    session.handler.pdo:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        arguments: ["@pdo", { db_table: session, db_id_col: session_id, db_data_col: session_value, db_time_col: session_time } ]

    kernel.listener.view_user_variable:
        class: Blogger\BlogBundle\EventListener\UserViewListener
        tags:
            - { name: kernel.event_listener, event: kernel.view, method: onKernelView }

    time_authenticator:
        class: Blogger\BlogBundle\Security\TimeAuthenticator
        arguments: [@security.encoder_factory, @kernel]

    #security.authentication.failure_handler.secured_area.simple_form:
        #class: Blogger\BlogBundle\Security\AnthenticationHandler
        #arguments:  [@router]
        #tags:
          #- { name: 'monolog.logger', channel: 'security' }
    #security.authentication.success_handler.secured_area.simple_form:
        #class: Blogger\BlogBundle\Security\AnthenticationHandler
        #arguments:  [@router]
        #tags:
          #- { name: 'monolog.logger', channel: 'security' }

    upload_picture_service:
        class: Blogger\BlogBundle\Consumer\UploadPictureConsumer

    my_oauth.user.provider.entity:
        class: Blogger\BlogBundle\Security\User\OAuthUserProvider
        arguments: [@doctrine.orm.entity_manager]

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     'guest'
            password: 'guest'
            vhost:    '/'
            lazy:     false
    producers:
        upload_picture:
            connection:       default
            exchange_options: {name: 'upload-picture', type: direct}
            queue_options:    {name: 'upload-picture'}
        broadcast:
            connection:       default
            exchange_options: {name: 'broadcast', type: fanout}
    consumers:
        upload_picture:
            connection:       default
            exchange_options: {name: 'upload-picture', type: direct}
            queue_options:    {name: 'upload-picture'}
            callback:         upload_picture_service
            idle_timeout:     60

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost:6379/0
        login:
            type: predis
            alias: login
            dsn: redis://localhost:6379/1

hwi_oauth:
    firewall_name: secured_area
    resource_owners:
        qq:
            type:                qq
            client_id:           ""
            client_secret:       ""
        weibo:
            type:                sina_weibo
            client_id:           ""
            client_secret:       ""
